/*========================================================================
    Copyright (c) 2012-2016 Seppo Laakko
    http://sourceforge.net/projects/cmajor/

    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

========================================================================*/

namespace Cm.Parser
{
    grammar ToolErrorGrammar
    {
        using stdlib.int;
        using stdlib.spaces;
        skip spaces;
        
        ToolError : Cm.Ast.ToolError
            ::= (ToolName ':' FilePath ':' Line ':' Column ':' Message){ value = Cm.Ast.ToolError(ToolName, FilePath, Line, Column, Message); }
            ;
            
        ToolName : string
            ::= token((anychar - ':')+){ value = string(matchBegin, matchEnd); }
            ;
        
        FilePath : string
            ::= token(Drive? (anychar - ':')+){ value = string(matchBegin, matchEnd); }
            ;
            
        Drive
            ::= token(letter ':')
            ;
            
        Line : int
            ::= int:i{ value = i; }
            ;
            
        Column : int
            ::= int:i{ value = i; }
            ;
            
        Message : string
            ::= token(anychar*){ value = string(matchBegin, matchEnd); }
            ;
    }    
}
