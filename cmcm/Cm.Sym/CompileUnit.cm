/*========================================================================
    Copyright (c) 2012-2016 Seppo Laakko
    http://sourceforge.net/projects/cmajor/

    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

========================================================================*/

using System;

namespace Cm.Sym
{
    public abstract class BoundCompileUnit
    {
        public virtual ~BoundCompileUnit()
        {
        }
        public abstract void Own(FunctionSymbol* fun);
    }
    
    public abstract class CompileUnitMap
    {
        public virtual ~CompileUnitMap()
        {
        }
        public abstract BoundCompileUnit* GetBoundCompileUnit(const string& compileUnitFilePath);
    }
    
    internal static class CompileUnitMapHolder
    {
        public static nothrow CompileUnitMap* GetCompileUnitMap()
        {
            #assert(compileUnitMap != null);
            return compileUnitMap;
        }
        public static nothrow void SetCompileUnitMap(CompileUnitMap* compileUnitMap_)
        {
            compileUnitMap = compileUnitMap_;
        }
        private static CompileUnitMap* compileUnitMap;
    }
    
    public nothrow void SetCompileUnitMap(CompileUnitMap* compileUnitMap)
    {
        CompileUnitMapHolder.SetCompileUnitMap(compileUnitMap);
    }
    
    public nothrow CompileUnitMap* GetCompileUnitMap()
    {
        return CompileUnitMapHolder.GetCompileUnitMap();
    }
}
