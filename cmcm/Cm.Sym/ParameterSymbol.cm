/*========================================================================
    Copyright (c) 2012-2015 Seppo Laakko
    http://sourceforge.net/projects/cmajor/

    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

========================================================================*/

using System;
using Span = System.Text.Parsing.Span;

namespace Cm.Sym
{
    public class ParameterSymbol : Symbol
    {
        public nothrow ParameterSymbol(const Span& span_, const string& name_) : base(span_, name_), type(null)
        {
        }
        public nothrow override SymbolType GetSymbolType() const
        {
            return SymbolType.parameterSymbol;
        }
        public nothrow override const char* TypeString() const
        {
            return "parameter";
        }
        public nothrow override bool IsParameterSymbol() const
        {
            return true;
        }
        public nothrow override bool IsExportSymbol() const
        {
            return true;
        }
        public nothrow override SymbolAccess DeclaredAccess() const
        {
            return SymbolAccess.public_;
        }
        public nothrow inline TypeSymbol* GetType() const
        {
            return type;
        }
        public nothrow inline void SetType(TypeSymbol* type_)
        {
            type = type_;
        }
        private TypeSymbol* type;
    }
}
