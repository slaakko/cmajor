/*========================================================================
    Copyright (c) 2012-2015 Seppo Laakko
    http://sourceforge.net/projects/cmajor/
 
    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

 ========================================================================*/

// Copyright (c) 1994
// Hewlett-Packard Company
// Copyright (c) 1996
// Silicon Graphics Computer Systems, Inc.
// Copyright (c) 2009 Alexander Stepanov and Paul McJones

namespace System.Text.Parsing
{
    public class Span
    {
        public nothrow inline Span(): fileIndex(-1), lineNumber(-1), start(-1), end(-1)
        {
        }
        public nothrow inline Span(int fileIndex_): fileIndex(fileIndex_), lineNumber(1), start(0), end(0)
        {
        }
        public nothrow inline Span(int fileIndex_, int lineNumber_, int start_): fileIndex(fileIndex_), lineNumber(lineNumber_), start(start_), end(start + 1)
        {
        }
        public nothrow inline Span(int fileIndex_, int lineNumber_, int start_, int end_): fileIndex(fileIndex_), lineNumber(lineNumber_), start(start_), end(end_)
        {
        }
        public nothrow inline int FileIndex() const 
        {
            return fileIndex;
        }
        public nothrow inline void SetFileIndex(int fileIndex_)
        {
            fileIndex = fileIndex_;
        }
        public nothrow inline int LineNumber() const
        {
            return lineNumber;
        }
        public nothrow inline int Start() const
        {
            return start;
        }
        public nothrow inline int End() const
        {
            return end;
        }
        public nothrow inline bool Valid() const
        {
            return start != -1;
        }
        public nothrow inline void IncLineNumber()
        {
            ++lineNumber;
        }
        public nothrow inline void operator++()
        {
            ++start;
            ++end;
        }
        public nothrow inline void SetEnd(int end_)
        {
            end = end_;
        }
        public nothrow inline bool IsNull() const
        {
            return fileIndex == 0 && lineNumber == 0 && start == 0 && end == 0;
        }
        private int fileIndex;
        private int lineNumber;
        private int start;
        private int end;
    }
}
