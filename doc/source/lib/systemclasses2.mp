input metaobj;
filenametemplate "%j.mps";
beginfig(1);
newBox.BitSet(btex System.Collections.BitSet etex);
newBox.CodeFormatter(btex System.Text.CodeFormatter etex);
newBox.Console(btex System.Console etex);
newBox.Exception(btex System.Exception etex);
newBox.ConversionException(btex System.ConversionException etex);
newBox.OpenFileException(btex System.IO.OpenFileException etex);
newBox.CloseFileException(btex System.IO.CloseFileException etex);
newBox.IOException(btex System.IO.IOException etex);
newBox.IOBUffer(btex System.IO.IOBuffer etex);
newBox.InputFileStream(btex System.IO.InputFileStream etex);
newBox.BinaryFileStream(btex System.IO.BinaryFileStream etex);
newBox.UnaryFun(btex System.UnaryFun$<$Argument, Result$>$ etex);
newBox.BinaryFun(btex System.BinaryFun$<$Argument1, Argument2, Result$>$ etex);
newBox.Plus(btex System.Plus$<$T$>$ etex);
newBox.Negate(btex System.Negate$<$T$>$ etex);
newBox.Minus(btex System.Minus$<$T$>$ etex);
newBox.Multiplies(btex System.Multiplies$<$T$>$ etex);
newBox.Divides(btex System.Divides$<$T$>$ etex);
newBox.Remainder(btex System.Remainder$<$T$>$ etex);
newBox.UnaryPred(btex System.UnaryPred$<$Argument$>$ etex);
newBox.BinaryPred(btex System.BinaryPred$<$Argument1, Argument2$>$ etex);
newBox.Rel(btex System.Rel$<$Argument$>$ etex);
newBox.Identity(btex System.Identity$<$T$>$ etex);
newBox.EqualTo(btex System.EqualTo$<$T$>$ etex);
newBox.EqualTo2(btex System.EqualTo2$<$T, U$>$ etex);
newBox.NotEqualTo(btex System.NotEqualTo$<$T$>$ etex);
newBox.NotEqualTo2(btex System.NotEqualTo2$<$T, U$>$ etex);
newBox.Less(btex System.Less$<$T$>$ etex);
newBox.Less2(btex System.Less2$<$T, U$>$ etex);
newBox.Greater(btex System.Greater$<$T$>$ etex);
newBox.Greater2(btex System.Greater2$<$T, U$>$ etex);
newBox.LessOrEqualTo(btex System.LessOrEqualTo$<$T$>$ etex);
newBox.LessOrEqualTo2(btex System.LessOrEqualTo2$<$T, U$>$ etex);
newBox.GreaterOrEqualTo(btex System.GreaterOrEqualTo$<$T$>$ etex);
newBox.GreaterOrEqualTo2(btex System.GreaterOrEqualTo2$<$T, U$>$ etex);
newBox.RandomAccessIter(btex System.RandomAccessIter$<$T, R, P$>$ etex);
newBox.BackInsertIterator(btex System.BackInsertIterator$<$C$>$ etex);
newBox.FrontInsertIterator(btex System.FrontInsertIterator$<$C$>$ etex);
newBox.InsertIterator(btex System.InsertIterator$<$C$>$ etex);
newBox.List(btex System.Collections.List$<$T$>$ etex);
newBox.Map(btex System.Collections.Map$<$Key, Value, KeyCompare$>$ etex);
newBox.Pair(btex System.Pair$<$T, U$>$ etex);
newBox.SelectFirst(btex System.SelectFirst$<$T, U$>$ etex);
newBox.SelectSecond(btex System.SelectSecond$<$T, U$>$ etex);
newBox.InvalidPathException(btex System.IO.InvalidPathException etex);
newBox.PathX(btex System.IO.Path etex);
newBox.UniquePtr(btex System.UniquePtr$<$T$>$ etex);
newBox.CounterBase(btex System.CounterBase etex);
newBox.Counter(btex System.Counter$<$T$>$ etex);
newBox.SharedCount(btex System.SharedCount$<$T$>$ etex);
newBox.WeakCount(btex System.WeakCount$<$T$>$ etex);
newBox.SharedPtr(btex System.SharedPtr$<$T$>$ etex);
newBox.WeakPtr(btex System.WeakPtr$<$T$>$ etex);
newBox.ShareableFromThis(btex System.ShareableFromThis$<$T$>$ etex);
newBox.Queue(btex System.Collections.Queue$<$T$>$ etex);
newBox.RedBlackTreeNodeIterator(btex System.Collections.RedBlackTreeNodeIterator$<$T, R, P$>$ etex);
newBox.RedBlackTree(btex System.Collections.RedBlackTree$<$KeyType, ValueType, KeyOfValue, Compare$>$ etex);
newBox.Set(btex System.Collections.Set$<$T, C$>$ etex);
newBox.Stack(btex System.Collections.Stack$<$T$>$ etex);
newBox.InputStream(btex System.IO.InputStream etex);
newBox.OutputStream(btex System.IO.OutputStream etex);
newBox.EndLine(btex System.EndLine etex);
newBox.String(btex System.String etex);
newBox.InputStringStream(btex System.IO.InputStringStream etex);
newBox.OutputStringStream(btex System.IO.OutputStringStream etex);
newTree.E(Exception)(ConversionException) "Ralign(right)", "treemode(R)";
newTree.R(Rel)(NotEqualTo,LessOrEqualTo,Less,GreaterOrEqualTo,Greater,EqualTo) "Ralign(right)", "treemode(R)";
newTree.BP(BinaryPred)(R,NotEqualTo2,LessOrEqualTo2,Less2,GreaterOrEqualTo2,Greater2,EqualTo2) "Ralign(right)", "treemode(R)";
newTree.BF(BinaryFun)(Remainder,Plus,Multiplies,Minus,Divides,BP) "Ralign(right)", "treemode(R)";
newTree.UF(UnaryFun)(UnaryPred,SelectSecond,SelectFirst,Negate,Identity) "Ralign(right)", "treemode(R)";
newVBox.b(UF,BF) "vbsep(0.5cm)";
scaleObj(b, 0.55);
b.c = origin;
drawObj(b);
endfig;
end
