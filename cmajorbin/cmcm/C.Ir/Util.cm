/*========================================================================
    Copyright (c) 2012-2015 Seppo Laakko
    http://sourceforge.net/projects/cmajor/

    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

========================================================================*/

using System;

namespace C
{
    public inline void Init(Ir.Intf.Emitter& emitter, Ir.Intf.Type* type, Ir.Intf.Object* from, Ir.Intf.Object* to)
    {
        from->InitTo(emitter, type, to);
    }
    
    public inline void Assign(Ir.Intf.Emitter& emitter, Ir.Intf.Type* type, Ir.Intf.Object* from, Ir.Intf.Object* to)
    {
        from->AssignTo(emitter, type, to);
    }

    public Ir.Intf.Object* SizeOf(Ir.Intf.Emitter& emitter, Ir.Intf.Type* type)
    {
        Ir.Intf.Object* result = MakeTemporaryRegVar(Ir.Intf.Factory.Instance()->GetI64());
        emitter.Own(result);
        emitter.Emit(CreateSizeOf(result, type));
        return result;
    }
}
