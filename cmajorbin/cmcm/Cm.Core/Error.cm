/*========================================================================
    Copyright (c) 2012-2015 Seppo Laakko
    http://sourceforge.net/projects/cmajor/

    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

========================================================================*/

using System;
using Expand = Cm.Parser.Expand;
using Span = System.Text.Parsing.Span;

namespace Cm.Core
{
    public class Error : Exception
    {
        public Error(const string& message_) : base(message_), message(message_), defined(), referenced()
        {
        }
        public Error(const string& message_, const Span& defined_) : base(Expand(message_, defined_)), message(message_), defined(defined_), referenced()
        {
        }
        public Error(const string& message_, const Span& defined_, const Span& referenced_) : base(Expand(message_, defined_, referenced_)), message(message_), defined(defined_), referenced(referenced_)
        {
        }
        public nothrow const string& Message() const
        {
            return message;
        }
        public nothrow const Span& Defined() const
        {
            return defined;
        }
        public nothrow const Span& Referenced() const
        {
            return referenced;
        }
        private string message;
        private Span defined;
        private Span referenced;
    }
    
    public class ConceptCheckError : Error
    {
        public ConceptCheckError(const string& message_) : base(message_)
        {
        }
        public ConceptCheckError(const string& message_, const Span& defined_) : base(message_, defined_)
        {
        }
    }
}
