/*========================================================================
    Copyright (c) 2012-2015 Seppo Laakko
    http://sourceforge.net/projects/cmajor/
 
    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

 ========================================================================*/

[hpp]#include <Cm.Parser/ParsingContext.hpp>
[hpp]#include <Cm.Ast/Parameter.hpp>
[cpp]#include <Cm.Parser/TypeExpr.hpp>
[cpp]#include <Cm.Parser/Identifier.hpp>

namespace Cm.Parser
{
    using namespace Cm::Ast;

    grammar ParameterGrammar
    {
        using TypeExprGrammar.TypeExpr;
        using IdentifierGrammar.Identifier;

        ParameterList(ParsingContext* ctx, Cm::Ast::Node* owner)
            ::= '('! (Parameter(ctx){ owner->AddParameter(Parameter); } % ',')? ')'!
            ;

        Parameter(ParsingContext* ctx): Cm::Ast::ParameterNode*
            ::= (TypeExpr(ctx) Identifier?){ value = new ParameterNode(span, TypeExpr, Identifier); }
            ;
    }
}