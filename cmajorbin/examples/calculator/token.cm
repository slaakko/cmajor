using System;

namespace Calculator
{
    public abstract class Token
    {
        public virtual ~Token()
        {
        }
    }

    public class Number: Token
    {
        public nothrow Number(double value_): value(value_) {}
        public nothrow inline double Value() const { return value; }
        private double value;
    }

    public class Operator: Token
    {
        public nothrow Operator(char ch_): ch(ch_) {}
        public nothrow inline bool IsAddOp() const { return ch == '+' || ch == '-'; }
        public nothrow inline bool IsMulOp() const { return ch == '*' || ch == '/'; }
        public nothrow inline bool IsLeftParen() const { return ch == '('; }
        public nothrow inline bool IsRightParen() const { return ch == ')'; }
        public nothrow inline char Ch() const { return ch; }
        private char ch;
    }

    public class End: Token
    {
    }
}
