/*========================================================================
    Copyright (c) 2012-2016 Seppo Laakko
    http://sourceforge.net/projects/cmajor/
 
    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

 ========================================================================*/

// Copyright (c) 1994
// Hewlett-Packard Company
// Copyright (c) 1996
// Silicon Graphics Computer Systems, Inc.
// Copyright (c) 2009 Alexander Stepanov and Paul McJones

using Cm;

namespace Syntax
{
    grammar GrammarGrammar
    {
        using ElementGrammar.Identifier;
        using ElementGrammar.QualifiedId;
        using ElementGrammar.RuleLink;
        using RuleGrammar.Rule;

        Grammar(Scope* enclosingScope, ParsingContext* ctx): Grammar*
                    ::= keyword("grammar") Identifier:name!{ value = new Grammar(name, enclosingScope); value->SetSpan(span); value->SetNs(enclosingScope->Ns()); }
                        '{'! GrammarContent(value, ctx) '}'!
                    ;

        GrammarContent(Grammar* grammar, ParsingContext* ctx)
                    ::=
                    (   StartClause(grammar)
                    |   SkipClause(grammar)
                    |   RuleLink(grammar)
                    |   Rule(grammar->GetScope(), ctx){ grammar->AddRule(Rule); }
                    )*
                    ;

        StartClause(Grammar* grammar)
                    ::= keyword("start") Identifier:strt! ';'{ grammar->SetStartRuleName(strt); }
                    ;

        SkipClause(Grammar* grammar)
                    ::= keyword("skip") QualifiedId:skp! ';'{ grammar->SetSkipRuleName(skp); }
                    ;
    }
}
