/*========================================================================
    Copyright (c) 2012-2016 Seppo Laakko
    http://sourceforge.net/projects/cmajor/
 
    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

 ========================================================================*/

// Copyright (c) 1994
// Hewlett-Packard Company
// Copyright (c) 1996
// Silicon Graphics Computer Systems, Inc.
// Copyright (c) 2009 Alexander Stepanov and Paul McJones

using System.Text.Parsing.CmObjectModel;

namespace Cm
{
    grammar TemplateGrammar
    {
        using IdentifierGrammar.QualifiedId;
        using TypeExprGrammar.TypeExpr;

        TemplateId(ParsingContext* ctx, var UniquePtr<TemplateId> templateId): TemplateId*
                ::= (   QualifiedId 
                        { 
                            templateId.Reset(new TemplateId(QualifiedId));
                        }
                        '<'
                        (TypeExpr(ctx){ templateId->AddTemplateArg(TypeExpr); } % ',') 
                        '>'
                    )
                    {
                        value = templateId.Release();
                    }
                ;
        
    }
}
