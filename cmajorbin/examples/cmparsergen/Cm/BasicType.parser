/*========================================================================
    Copyright (c) 2012-2016 Seppo Laakko
    http://sourceforge.net/projects/cmajor/
 
    Distributed under the GNU General Public License, version 3 (GPLv3).
    (See accompanying LICENSE.txt or http://www.gnu.org/licenses/gpl.html)

 ========================================================================*/

// Copyright (c) 1994
// Hewlett-Packard Company
// Copyright (c) 1996
// Silicon Graphics Computer Systems, Inc.
// Copyright (c) 2009 Alexander Stepanov and Paul McJones

using TypePtr = System.Text.Parsing.CmObjectModel.TypePtr;
using BoolType = System.Text.Parsing.CmObjectModel.BoolType;
using SByteType = System.Text.Parsing.CmObjectModel.SByteType;
using ByteType = System.Text.Parsing.CmObjectModel.ByteType;
using UShortType = System.Text.Parsing.CmObjectModel.UShortType;
using ShortType = System.Text.Parsing.CmObjectModel.ShortType;
using UIntType = System.Text.Parsing.CmObjectModel.UIntType;
using IntType = System.Text.Parsing.CmObjectModel.IntType;
using LongType = System.Text.Parsing.CmObjectModel.LongType;
using ULongType = System.Text.Parsing.CmObjectModel.ULongType;
using FloatType = System.Text.Parsing.CmObjectModel.FloatType;
using DoubleType = System.Text.Parsing.CmObjectModel.DoubleType;
using CharType = System.Text.Parsing.CmObjectModel.CharType;
using VoidType = System.Text.Parsing.CmObjectModel.VoidType;

namespace Cm
{
    grammar BasicTypeGrammar
    {
        BasicType: TypePtr  
                    ::= keyword("bool"){ value = new BoolType(); }
                    |   keyword("sbyte"){ value = new SByteType(); }
                    |   keyword("byte"){ value = new ByteType(); }
                    |   keyword("ushort"){ value = new UShortType(); }
                    |   keyword("short"){ value = new ShortType(); }
                    |   keyword("uint"){ value = new UIntType(); }
                    |   keyword("int"){ value = new IntType(); }
                    |   keyword("ulong"){ value = new ULongType(); }
                    |   keyword("long"){ value = new LongType(); }
                    |   keyword("float"){ value = new FloatType(); }
                    |   keyword("double"){ value = new DoubleType(); }
                    |   keyword("char"){ value = new CharType(); }
                    |   keyword("void"){ value = new VoidType(); }
                    ;
    }
}
