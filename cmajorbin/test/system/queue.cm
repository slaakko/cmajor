using System;
using System.Collections;

namespace Test.System.Collections.Queue
{
    public unit_test void QueueTest()
    {
        Queue<int> q0;
        #assert(q0.IsEmpty());
        #assert(q0.Count() == 0);
        q0.Put(1);
        q0.Put(2);
        q0.Put(3);
        #assert(!q0.IsEmpty());
        #assert(q0.Count() == 3);
        #assert(q0.Get() == 1);
        #assert(q0.Get() == 2);
        #assert(q0.Get() == 3);
        #assert(q0.IsEmpty());
        #assert(q0.Count() == 0);
        for (int i = 0; i < 100; ++i)
        {
            q0.Put(i);
        }
        #assert(!q0.IsEmpty());
        #assert(q0.Count() == 100);
        for (int i = 0; i < 100; ++i)
        {
            int x = q0.Get();
            #assert(x == i);
        }
        #assert(q0.IsEmpty());
        #assert(q0.Count() == 0);

        Queue<UniquePtr<int>> q1;
        #assert(q1.IsEmpty());
        #assert(q1.Count() == 0);

        q1.Put(UniquePtr<int>(new int(1)));
        q1.Put(UniquePtr<int>(new int(2)));
        q1.Put(UniquePtr<int>(new int (3)));
        #assert(!q1.IsEmpty());
        #assert(q1.Count() == 3);
        #assert(*q1.Get() == 1);
        #assert(*q1.Get() == 2);
        #assert(*q1.Get() == 3);
        #assert(q1.IsEmpty());
        #assert(q1.Count() == 0);
        for (int i = 0; i < 100; ++i)
        {
            q1.Put(UniquePtr<int>(new int(i)));
        }
        #assert(!q1.IsEmpty());
        #assert(q1.Count() == 100);
        for (int i = 0; i < 100; ++i)
        {
            int x = *q1.Get();
            #assert(x == i);
        }
        #assert(q1.IsEmpty());
        #assert(q1.Count() == 0);

    }
}
